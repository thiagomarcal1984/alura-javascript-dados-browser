O objeto SubmitEvent tem o objeto target, que representa o formulário enviado.

O formulário contém os elementos do formulário em ordem numérica (target[0] 
acessa o primeiro elemento do array) e um objeto interno chamado elements (que 
contém os elementos nomeados).

Formas de acessar os objetos do formulário:
    form[0] => pega o primeiro objeto do formulário.
    form.elements['elemento'] => pega o objeto 'elemento' no formulário.

Diferença entre o método appendChild e a propriedade innerHtml:
    appendChild adiciona um elemento HTML dentro da tag que chama o método.
    innerHtml modifica o contéudo interno da tag que chama o método.

Não use o innerHtml para adicionar tags, porque o objeto JavaScript que 
representa a tag é inserido como [object HTMLElement], não como uma tag.

Não use o método appendChild para inserir uma string. Ela acrescenta apenas
elementos do tipo Node.

LocalStorage é um meio de armazenamento no navegador. É possível visualizá-los
na Devtools do browser. Você pode acessá-lo pelo objeto localStorage:
    console.log(localStorage)

Para acrescentar um item ao LocalStorage, use o método setItem:
    localStorage.setItem(key, value)

O item inserido pode ser acessado pelo nome da chave ou pelo método getItem:
    console.log(localStorage.key) // Sem aspas duplas.
    console.log(localStorage.getItem("key")) // Com aspas duplas.

Para remover itens do LocalStorage, use o método removeItem:
    localStorage.removeItem(key)

Para esvaziar o LocalStorage, use o método clear:
    localStorage.clear()

O método setItem sobreescreve o valor para uma mesma chave.

Salvar um objeto no LocalStorage traz o mesmo problema do innerHtml: é 
necessário converter a entrada JSON com o método stringify:
    localStorage.setItem("item", JSON.stringify(itemAtual))

O objeto "stringificado" que vai ficar no LocalStorage precisa ser um array,
caso você queira atualizar um objeto composto.

Em JavaScript, a notação abaixo serve para atribuir um valor padrão:
    const valor = objeto || "Valor padrão"

JSON.stringify converte um objeto JSON para String. 
O contrário é JSON.parse (converte texto para JSON).

Sintaxe de uma array function:
    // objeto.metodo(   () => { comando }    )
    lista.forEach(
        (variavel_temporaria) => {
            console.log(variavel_temporaria)
        }
    )

Para selecionar elementos pela propriedade data-id, use:
    // O seletor seria: data-id="valor-id" (aspas duplas pro valor).
    document.querySelector("[data-id='valor-id']") // Aspas simples pro valor.

O código ainda está com um problema: o LocalStorage não é atualizado quando
atualizamos um elemento já existente. Apenas a tela é atualizada.

As atualizações no LocalStorage necessariamente consiste na atualização de
toda a chave. Não é possível, por exemplo, atualizar um elemento de um array
dentro de uma chave do LocalStorage.
